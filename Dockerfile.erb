FROM centos:<%= image.version %>
<% image.labels.each do |label, value| -%>
LABEL <%= label %>="<%= value %>"
<% end -%>

ENV RUNUSER none
ENV HOME /

RUN rm -rf /var/cache/yum/* \
 && echo "exclude=mirror.layeronline.com" >> /etc/yum/pluginconf.d/fastestmirror.conf

RUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY* \
 && yum -y --setopt tsflags=nodocs --setopt timeout=5 update \
 && yum -y --setopt tsflags=nodocs --setopt timeout=5 install \
    wget \
    epel-release \
 && rm -rf /var/cache/yum/*

# Add docker-entrypoint script base
ADD https://github.com/itsbcit/docker-entrypoint/releases/download/v<%= image.vars['de_version'] %>/docker-entrypoint.tar.gz /docker-entrypoint.tar.gz
RUN tar zxvf docker-entrypoint.tar.gz && rm -f docker-entrypoint.tar.gz \
&& chmod -R 555 /docker-entrypoint.* \
&& chmod 664 /etc/passwd /etc/group /etc/shadow \
&& chown 0:0 /etc/shadow \
&& chmod 775 /etc

# Add dockerize
ADD https://github.com/jwilder/dockerize/releases/download/v<%= image.vars['dockerize_version'] %>/dockerize-alpine-linux-amd64-v<%= image.vars['dockerize_version'] %>.tar.gz /dockerize.tar.gz
RUN tar zxf /dockerize.tar.gz -C /usr/local/bin \
&& chown 0:0 /usr/local/bin/dockerize \
&& chmod 0555 /usr/local/bin/dockerize \
&& rm -f /dockerize.tar.gz

# Add Tini
ADD https://github.com/krallin/tini/releases/download/v<%= image.vars['tini_version'] %>/tini-static-amd64 /tini
RUN chmod +x /tini

ENTRYPOINT ["/tini", "--", "/docker-entrypoint.sh"]
<% if image.variant == 'supervisord' -%>
# Install & configure supervisor
RUN yum -y --setopt tsflags=nodocs --setopt timeout=5 install \
        supervisor \
 && mkdir -p /var/log/supervisor \
 && mkdir -p /etc/supervisor/conf.d
COPY supervisor.conf /etc/supervisor.conf

CMD ["supervisord", "-c", "/etc/supervisor.conf"]
<% end -%>
